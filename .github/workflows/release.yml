name: Release

on:
  push:
    tags:
      - 'v*'

concurrency: release-${{ github.ref }}

jobs:
  build-release:
    name: Build & Upload Artifacts
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: [1.23.x]
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            output-name: mohua-linux-amd64
          - os: ubuntu-latest
            goos: linux
            goarch: arm64
            output-name: mohua-linux-arm64
          - os: windows-latest
            goos: windows
            goarch: amd64
            output-name: mohua-windows-amd64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod tidy

      - name: Install UPX (Linux)
        if: matrix.goos == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y upx-ucl

      - name: Install UPX (Windows)
        if: matrix.goos == 'windows'
        run: choco install upx

      - name: Build
        shell: bash  # For Windows
        run: |
          VERSION=$(git describe --tags --always)
          COMMIT=$(git rev-parse HEAD)
          BUILD_DATE=$(date -u '+%Y-%m-%d')
          LDFLAGS="-s -w -X main.version=${VERSION} -X main.commit=${COMMIT} -X main.date=${BUILD_DATE}"

          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -ldflags="${LDFLAGS}" -o ${{ matrix.output-name }}

          upx --best --lzma ${{ matrix.output-name }}

      - name: Prepare release directory
        run: |
          mkdir -p release/bin
          mv ${{ matrix.output-name }} release/bin/
          cp README.md release/
          cp LICENSE release/

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: release/

  create-release:
    name: Create GitHub Release
    needs: build-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-artifacts
          path: release

      - name: Debug File Structure
        run: ls -R release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/bin/mohua-linux-amd64
            release/bin/mohua-linux-arm64
            release/bin/mohua-windows-amd64.exe
            release/README.md
            release/LICENSE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
